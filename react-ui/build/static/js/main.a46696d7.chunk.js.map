{"version":3,"sources":["contexts/themeContext.js","wrappers/Boundary.js","components/Home.js","components/FormikForm.js","components/ReduxForm.js","redux/selectors/appState.js","components/Settings.js","redux/actions/appState.js","redux/actionTypes/appState.js","components/ListData.js","hoc/withLoader.js","components/List.js","components/Admin.js","components/ErrorBoundary.js","components/RequestCancellation.js","components/reusable/Modal.js","components/ModalsPage.js","components/Router.js","redux/reducers/appState.js","redux/reducers/index.js","redux/stores/index.js","App.js","serviceWorker.js","index.js"],"names":["themes","dark","background","foreground","light","createContext","theme","toggleTheme","Boundary","state","isError","this","setState","props","children","Component","Home","validationSchema","Yup","shape","title","min","max","required","content","author","email","address","FormikForm","console","log","history","initialValues","favoriteSnacks","onSubmit","formikProps","values","className","htmlFor","name","as","type","render","arrayHelpers","length","map","_snack","index","key","onClick","remove","push","renderForm","reduxForm","form","handleSubmit","Field","component","getCurrentUser","get","SELECTABLE_ROLES","mapDispatchToProps","setCurrentUserRole","role","payload","connect","user","JSON","stringify","onChange","event","value","target","roleName","Consumer","withLoader","isLoading","componentProps","List","setTimeout","React","Admin","src","alt","ErrorBoundary","counter","handleClick","bind","Error","RequestCancellation","source","axios","CancelToken","response","cancelToken","token","then","data","catch","error","isCancel","cancel","modalStyles","position","top","right","bottom","left","Modal","buttonText","onConfirm","onClose","isOpen","style","ModalsPage","isFirstModalOpen","isSecondModalOpen","onFirstConfirm","closeFirstModal","onSecondConfirm","closeSecondModal","alert","openFirstModal","openSecondModal","currentRole","useState","currentTheme","setCurrentTheme","isEqual","styles","color","backgroundColor","padding","minHeight","linkStyles","marginRight","to","Provider","path","ReduxForm","Settings","routeProps","renderProps","initialState","currentUser","combineReducers","formReducer","appState","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"sRAEaA,EAAS,CACpBC,KAAM,CACJC,WAAY,OACZC,WAAY,QAEdC,MAAO,CACLF,WAAY,OACZC,WAAY,SAIDE,0BAAc,CAC3BC,MAAON,EAAOI,MACdG,YAAa,e,wCCGAC,EAhBf,2MACEC,MAAQ,CACNC,SAAS,GAFb,mFAMIC,KAAKC,SAAS,CAAEF,SAAS,MAN7B,+BAUI,OAAOC,KAAKF,MAAMC,QACd,mCACAC,KAAKE,MAAMC,aAZnB,GAA8BC,aCAfC,EAFF,iBAAM,a,gBCIbC,EAAmBC,WAAaC,MAAM,CAC1CC,MAAOF,WAEJG,IAAI,GACJC,IAAI,IACJC,SAAS,eACZC,QAASN,WAENG,IAAI,GACJC,IAAI,IACJC,SAAS,eACZE,OAAQP,WAELC,MAAM,CACLO,MAAOR,WAEJQ,MAAM,cACNH,SAAS,eACZI,QAAST,WAENG,IAAI,GACJE,SAAS,mBAoFHK,EAhFI,SAACf,GA0DlB,OADAgB,QAAQC,IAAIjB,EAAMkB,SAEhB,oCACE,2CACA,kBAAC,IAAD,CACEC,cAAe,CACbZ,MAAO,GACPI,QAAS,GACTC,OAAQ,CACNC,MAAO,GACPC,QAAS,IAEXM,eAAgB,IAElBhB,iBAAkBA,EAClBiB,SAvEe,SAACC,GACpBN,QAAQC,IAAI,CAACK,mBAwER,SAACA,GAAD,OArEY,SAACA,GAAiB,IAC3BC,EAAWD,EAAXC,OAER,OACE,kBAAC,IAAD,CAAMC,UAAU,QACd,2BAAOC,QAAQ,SAAf,SACA,kBAAC,IAAD,CAAOC,KAAK,QAAQF,UAAU,eAC9B,kBAAC,IAAD,CAAcE,KAAK,UAEnB,2BAAOD,QAAQ,WAAf,WACA,kBAAC,IAAD,CAAOC,KAAK,UAAUC,GAAG,WAAWH,UAAU,eAC9C,kBAAC,IAAD,CAAcE,KAAK,YAEnB,2BAAOD,QAAQ,gBAAf,SACA,kBAAC,IAAD,CAAOC,KAAK,eAAeE,KAAK,QAAQJ,UAAU,eAClD,kBAAC,IAAD,CAAcE,KAAK,iBAEnB,2BAAOD,QAAQ,kBAAf,WACA,kBAAC,IAAD,CAAOC,KAAK,iBAAiBF,UAAU,eACvC,kBAAC,IAAD,CAAcE,KAAK,mBAEnB,kBAAC,IAAD,CACEA,KAAK,iBACLG,OAAQ,SAAAC,GAAY,OAClB,6BACGP,EAAOH,gBAAkBG,EAAOH,eAAeW,OAAS,EACvD,oCACE,2BAAON,QAAQ,oBAAf,oBACCF,EAAOH,eAAeY,KAAI,SAACC,EAAQC,GAAT,OACzB,yBAAKC,IAAKD,GACR,kBAAC,IAAD,CAAOR,KAAI,yBAAoBQ,GAASV,UAAU,eAClD,kBAAC,IAAD,CAAcE,KAAI,yBAAoBQ,KAEtC,4BAAQN,KAAK,SAASQ,QAAS,kBAAMN,EAAaO,OAAOH,KAAzD,SAGJ,4BAAQN,KAAK,SAASQ,QAAS,kBAAMN,EAAaQ,KAAK,MAAvD,MAGF,4BAAQV,KAAK,SAASQ,QAAS,kBAAMN,EAAaQ,KAAK,MAAvD,iBAQR,4BAAQV,KAAK,UAAb,WAsBkBW,CAAWjB,Q,kBC9EtBkB,cAAU,CACvBC,KAAM,gBADOD,EAtBG,SAACxC,GAAW,IACpB0C,EAAiB1C,EAAjB0C,aAER,OACE,oCACE,0CACA,0BAAMrB,SAAUqB,EAAclB,UAAU,QACtC,2BAAOC,QAAQ,SAAf,SACA,kBAACkB,EAAA,EAAD,CAAOC,UAAU,QAAQlB,KAAK,QAAQF,UAAU,eAEhD,2BAAOC,QAAQ,WAAf,WACA,kBAACkB,EAAA,EAAD,CAAOC,UAAU,WAAWlB,KAAK,UAAUC,GAAG,WAAWH,UAAU,eAEnE,2BAAOC,QAAQ,UAAf,UACA,kBAACkB,EAAA,EAAD,CAAOC,UAAU,QAAQlB,KAAK,SAASE,KAAK,QAAQJ,UAAU,eAE9D,4BAAQI,KAAK,UAAb,eCjBKiB,EAAiB,SAAAjD,GAAK,OAAIkD,cAAIlD,EAAO,yBCK5CmD,EAAmB,CAAC,OAAQ,SAwC5BC,EAAqB,CACzBC,mBCzCgC,SAAAC,GAAI,MAAK,CACzCtB,KCPmC,wBDQnCuB,QAASD,KD0CIE,eARS,SAAAxD,GAAK,MAAK,CAChCyD,KAAMR,EAAejD,MAOiBoD,EAAzBI,EA1CE,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMJ,EAAwB,EAAxBA,mBAMvB,OACE,6BACE,wCACA,iEAEA,4CACA,6BAAMK,KAAKC,UAAUF,EAAM,KAAM,IAEjC,8BACE,+CAEE,4BAAQG,SAhBS,SAAAC,GAAU,IACzBC,EAAUD,EAAME,OAAhBD,MACRT,EAAmBS,IAcuBA,MAAOL,EAAKH,MAC7CH,EAAiBf,KAAI,SAAA4B,GAAQ,OAAI,4BAAQF,MAAOE,GAAWA,SAIlE,kBAAC,EAAaC,SAAd,MACG,gBAAEnE,EAAF,EAAEA,YAAF,OACC,4CAEE,4BAAQkC,KAAK,SAASQ,QAAS1C,GAA/B,wB,SGjBGoE,EChBI,SAAA5D,GAQjB,OAP0B,SAACF,GACgBA,EAAjC+D,UAD4B,IACdC,EADa,YACMhE,EADN,eAEnC,OAAOA,EAAM+D,UACT,yCACA,kBAAC7D,EAAc8D,IDWRF,EAfE,WACf,OACE,4BACE,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,+CESSG,E,2MAjBbrE,MAAQ,CAAEmE,WAAW,G,mFAEA,IAAD,OAClBG,YAAW,kBAAM,EAAKnE,SAAS,CAAEgE,WAAW,MAAU,O,+BAKtD,OADA/C,QAAQC,IAAInB,KAAKF,OAEf,oCACE,sCACA,kBAAC,EAAD,CAAUmE,UAAWjE,KAAKF,MAAMmE,iB,GAZrBI,IAAMjE,WCOVkE,EATD,WACZ,OACE,6BACE,2CACA,yBAAKC,IAAI,sCAAsCC,IAAI,O,QCiB1CC,E,YApBb,WAAYvE,GAAQ,IAAD,8BACjB,4CAAMA,KACDJ,MAAQ,CAAE4E,QAAS,GACxB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,2EAOjB5E,KAAKC,UAAS,kBAAgB,CAC5ByE,QADY,EAAEA,QACK,Q,+BAKrB,GAAI1E,KAAKF,MAAM4E,SAAW,EACxB,MAAM,IAAIG,MAAM,cAElB,OAAO,wBAAIvC,QAAStC,KAAK2E,aAAc3E,KAAKF,MAAM4E,a,GAjB1BtE,a,iBC6Bb0E,EA5Bf,2MACEC,OAASC,IAAMC,YAAYF,SAD7B,EAEEjF,MAAQ,CACNoF,SAAU,IAHd,EAUEP,YAAc,WACZK,IAAMhC,IAAI,wBAAyB,CAAEmC,YAAa,EAAKJ,OAAOK,QAC3DC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAc,EAAKrF,SAAS,CAACiF,SAAUI,OAC5CC,OAAM,SAAAC,GAAK,OAAIR,IAAMS,SAASD,GAAStE,QAAQC,IAAI,aAAeD,QAAQsE,MAAMA,OAbvF,sFAOIxF,KAAK+E,OAAOW,OAAO,uBAPvB,+BAiBI,OACE,6BACE,4BAAQ5D,KAAK,SAASQ,QAAStC,KAAK2E,aAApC,kBACA,6BACGnB,KAAKC,UAAUzD,KAAKF,MAAO,KAAM,SArB5C,GAAyCM,aCDnCuF,EAAc,CAClBC,SAAU,WACVC,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,MACNzG,WAAY,QAeC0G,EAZD,SAAC,GAAyD,IAAvDpF,EAAsD,EAAtDA,QAASqF,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,QAC/C,OADqE,EAAbC,OAItD,yBAAKC,MAAOX,GACV,4BAAQ7D,KAAK,SAASQ,QAAS8D,GAA/B,KACA,6BAAMvF,GACN,4BAAQiB,KAAK,SAASQ,QAAS6D,GAAYD,IANzB,MCgDTK,EAzDf,2MACEzG,MAAQ,CACN0G,kBAAkB,EAClBC,mBAAmB,GAHvB,EAMEC,eAAiB,WACf,EAAKC,kBACLzF,QAAQC,IAAI,OARhB,EAWEyF,gBAAkB,WAChB,EAAKC,mBACLC,MAAM,SAbV,EAgBEH,gBAAkB,WAChB,EAAK1G,SAAS,CAACuG,kBAAkB,KAjBrC,EAoBEK,iBAAmB,WACjB,EAAK5G,SAAS,CAACwG,mBAAmB,KArBtC,EAwBEM,eAAiB,WACf,EAAK9G,SAAS,CAACuG,kBAAkB,KAzBrC,EA4BEQ,gBAAkB,WAChB,EAAK/G,SAAS,CAACwG,mBAAmB,KA7BtC,wEAgCY,IAAD,EACyCzG,KAAKF,MAA7C0G,EADD,EACCA,iBAAkBC,EADnB,EACmBA,kBAC1B,OACE,oCACE,4BAAQ3E,KAAK,SAASQ,QAAStC,KAAK+G,gBAApC,oBACA,4BAAQjF,KAAK,SAASQ,QAAStC,KAAKgH,iBAApC,oBACA,kBAAC,EAAD,CACEX,OAAQG,EACR3F,QAAQ,0BACRqF,WAAW,UACXC,UAAWnG,KAAK0G,eAChBN,QAASpG,KAAK2G,kBAEhB,kBAAC,EAAD,CACEN,OAAQI,EACR5F,QAAQ,iBACRqF,WAAW,KACXC,UAAWnG,KAAK4G,gBAChBR,QAASpG,KAAK6G,wBAlDxB,GAAgCzG,aCsFjBkD,eAJS,SAAAxD,GAAK,MAAK,CAChCmH,YAAajE,cAAID,EAAejD,GAAQ,OAAQ,YAGnCwD,EAvEA,SAAC,GAAqB,IAAnB2D,EAAkB,EAAlBA,YAAkB,EACMC,mBAAS7H,EAAOI,OADtB,mBAC3B0H,EAD2B,KACbC,EADa,KAE5BxH,EAAc,WAClByH,kBAAQF,EAAc9H,EAAOI,OAC1B2H,EAAgB/H,EAAOC,MACvB8H,EAAgB/H,EAAOI,QAGtB6H,EAAS,CACbC,MAAOJ,EAAa3H,WACpBgI,gBAAiBL,EAAa5H,WAC9BkI,QAAS,MACTC,UAAW,SAGPC,EAAa,CACjBJ,MAAOJ,EAAa3H,WACpBoI,YAAa,QAGf,OACE,yBAAKtB,MAAOgB,GACV,kBAAC,IAAD,KACE,6BACE,6BACE,kBAAC,IAAD,CAAMhB,MAAOqB,EAAYE,GAAG,KAA5B,QACA,kBAAC,IAAD,CAAMvB,MAAOqB,EAAYE,GAAG,cAA5B,UACA,kBAAC,IAAD,CAAMvB,MAAOqB,EAAYE,GAAG,kBAA5B,cACA,kBAAC,IAAD,CAAMvB,MAAOqB,EAAYE,GAAG,SAA5B,QACA,kBAAC,IAAD,CAAMvB,MAAOqB,EAAYE,GAAG,aAA5B,YACA,kBAAC,IAAD,CAAMvB,MAAOqB,EAAYE,GAAG,UAA5B,eACA,kBAAC,IAAD,CAAMvB,MAAOqB,EAAYE,GAAG,UAA5B,oBACA,kBAAC,IAAD,CAAMvB,MAAOqB,EAAYE,GAAG,iBAA5B,WACA,kBAAC,IAAD,CAAMvB,MAAOqB,EAAYE,GAAG,mBAA5B,mBAEF,4BAAQ/F,KAAK,SAASQ,QAAS1C,GAA/B,iBAGF,kBAAC,EAAakI,SAAd,CAAuBlE,MAAO,CAACjE,MAAOwH,EAAcvH,YAAaA,IAC/D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmI,KAAK,cAAcjF,UAAW7B,IACrC,kBAAC,IAAD,CAAO8G,KAAK,kBAAkBjF,UAAWkF,IACzC,kBAAC,IAAD,CAAOD,KAAK,QAAQjF,UAAWqB,IAC/B,kBAAC,IAAD,CAAO4D,KAAK,YAAYjF,UAAWmF,IACnC,kBAAC,IAAD,CAAOF,KAAK,SAAShG,OAAQ,SAACmG,GAAD,OAC3B,kBAAC,EAAD,KACE,kBAAC,EAAD,UAGJ,kBAAC,IAAD,CACEH,KAAK,SACLhG,OAAQ,SAAAoG,GAAW,MACA,UAAhBlB,EACG,kBAAC,EAAUkB,GACX,kBAAC,IAAD,CAAUN,GAAG,SAGrB,kBAAC,IAAD,CAAOE,KAAK,gBAAgBjF,UAAWgC,IACvC,kBAAC,IAAD,CAAOiD,KAAK,kBAAkBjF,UAAWyD,IACzC,kBAAC,IAAD,CAAOwB,KAAK,IAAIjF,UAAWzC,W,wBC3E1B+H,EAAe,CAC1BC,YAAa,CACXtH,MAAO,oBACPqC,KAAM,SCAKkF,cAAgB,CAC7B3F,KAAM4F,IACNC,SDEa,WAA8C,IAA7C1I,EAA4C,uDAApCsI,EAAoC,yCAApBtG,EAAoB,EAApBA,KAAMuB,EAAc,EAAdA,QAC5C,OAAQvB,GACN,IVX4B,mBUY1B,OAAO,eACFhC,EADL,CAEEuI,YAAahF,IAIjB,IVjBiC,wBUkB/B,OAAO,eACFvD,EADL,CAEEuI,YAAY,eACPvI,EAAMuI,YADA,CAETjF,KAAMC,MAKZ,QACE,OAAOvD,MEzBA2I,EAAQC,YACnBC,EACAC,OAAOC,8BAAgCD,OAAOC,gCCSjCC,MARf,WACE,OACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,QCEAM,EAAcC,QACW,cAA7BJ,OAAOK,SAASC,UAEe,UAA7BN,OAAOK,SAASC,UAEhBN,OAAOK,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACThE,MAAK,SAAAqE,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9J,QACfyJ,UAAUC,cAAcO,YAI1B7I,QAAQC,IACN,iHAKEmI,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBxI,QAAQC,IAAI,sCAGRmI,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BnE,OAAM,SAAAC,GACLtE,QAAQsE,MAAM,4CAA6CA,MC3FjE0E,IAASnI,OAAO,kBAAC,EAAD,MAASoI,SAASC,eAAe,SDiB1C,SAAkBd,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIc,IAAIC,GAAwB1B,OAAOK,SAASsB,MACpDC,SAAW5B,OAAOK,SAASuB,OAIvC,OAGF5B,OAAO6B,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAMiB,GAAN,sBAEPvB,IAgEV,SAAiCM,EAAOC,GAEtCoB,MAAMrB,EAAO,CACXsB,QAAS,CAAE,iBAAkB,YAE5BtF,MAAK,SAAAH,GAEJ,IAAM0F,EAAc1F,EAASyF,QAAQ3H,IAAI,gBAEnB,MAApBkC,EAAS2F,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CvB,UAAUC,cAAcuB,MAAM1F,MAAK,SAAAqE,GACjCA,EAAasB,aAAa3F,MAAK,WAC7BuD,OAAOK,SAASgC,eAKpB7B,EAAgBC,EAAOC,MAG1B/D,OAAM,WACLrE,QAAQC,IACN,oEAvFA+J,CAAwB7B,EAAOC,GAI/BC,UAAUC,cAAcuB,MAAM1F,MAAK,WACjCnE,QAAQC,IACN,iHAMJiI,EAAgBC,EAAOC,OCvC/BE,K","file":"static/js/main.a46696d7.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const themes = {\n  dark: {\n    background: '#444',\n    foreground: '#eee'\n  },\n  light: {\n    background: '#fff',\n    foreground: '#222'\n  }\n}\n\nexport default createContext({\n  theme: themes.light,\n  toggleTheme: () => {},\n})\n","import React, { Component } from 'react'\n\nexport class Boundary extends Component {\n  state = {\n    isError: false\n  }\n\n  componentDidCatch() {\n    this.setState({ isError: true })\n  }\n\n  render() {\n    return this.state.isError \n      ? <div>:(</div>\n      : this.props.children\n  }\n}\n\nexport default Boundary\n","const Home = () => 'Home page'\n\nexport default Home\n","import React from 'react';\nimport {Formik, Form, Field, ErrorMessage, FieldArray} from 'formik';\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup\n    .string()\n    .min(5)\n    .max(20)\n    .required('is required'),\n  content: Yup\n    .string()\n    .min(5)\n    .max(20)\n    .required('is required'),\n  author: Yup\n    .object()\n    .shape({\n      email: Yup\n        .string()\n        .email('is invalid')\n        .required('is required'),\n      address: Yup\n        .string()\n        .min(4)\n        .required('is required'),\n    })\n})\n\nconst FormikForm = (props) => {\n  const handleSubmit = (formikProps) => {\n    console.log({formikProps})\n  }\n\n  const renderForm = (formikProps) => {\n    const { values } = formikProps\n    \n    return (\n      <Form className='form'>\n        <label htmlFor='title'>title</label>\n        <Field name='title' className='form-input' />\n        <ErrorMessage name='title'/>\n\n        <label htmlFor='content'>content</label>\n        <Field name='content' as='textarea' className='form-input' />\n        <ErrorMessage name='content'/>\n\n        <label htmlFor='author.email'>email</label>\n        <Field name='author.email' type='email' className='form-input' />\n        <ErrorMessage name='author.email'/>\n\n        <label htmlFor='author.address'>address</label>\n        <Field name='author.address' className='form-input' />\n        <ErrorMessage name='author.address'/>\n\n        <FieldArray\n          name='favoriteSnacks'\n          render={arrayHelpers => (\n            <div>\n              {values.favoriteSnacks && values.favoriteSnacks.length > 0 ? (\n                <>\n                  <label htmlFor='favoriteSnacks.0'> favorite snacks</label>\n                  {values.favoriteSnacks.map((_snack, index) => (\n                    <div key={index}>\n                      <Field name={`favoriteSnacks.${index}`} className='form-input' />\n                      <ErrorMessage name={`favoriteSnacks.${index}`}/>\n\n                      <button type='button' onClick={() => arrayHelpers.remove(index)}>-</button>\n                    </div>\n                  ))}\n                  <button type='button' onClick={() => arrayHelpers.push('')}>+</button>\n                </>\n              ) : (\n                <button type='button' onClick={() => arrayHelpers.push('')}>\n                  Add snack\n                </button>\n              )}\n            </div>\n          )}\n        />\n\n        <button type='submit'>Submit</button>\n      </Form>\n    )\n  }\n\n  console.log(props.history)\n  return (\n    <>\n      <h1>Formik form</h1>\n      <Formik\n        initialValues={{\n          title: '',\n          content: '',\n          author: {\n            email: '',\n            address: ''\n          },\n          favoriteSnacks: []\n        }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {(formikProps) => renderForm(formikProps)}\n      </Formik>\n    </>\n  )\n}\n\nexport default FormikForm\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nconst ReduxForm = (props) => {\n  const { handleSubmit } = props;\n\n  return (\n    <>\n      <h1>Redux Form</h1>\n      <form onSubmit={handleSubmit} className='form'>\n        <label htmlFor='title'>title</label>\n        <Field component='input' name='title' className='form-input' />\n\n        <label htmlFor='content'>content</label>\n        <Field component='textarea' name='content' as='textarea' className='form-input' />\n\n        <label htmlFor='author'>author</label>\n        <Field component='input' name='author' type='email' className='form-input' />\n\n        <button type='submit'>Submit</button>\n      </form>\n    </>\n  )\n}\n\nexport default reduxForm({\n  form: 'example form',\n})(ReduxForm);\n","import { get } from 'lodash';\n\nexport const getCurrentUser = state => get(state, 'appState.currentUser')\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport ThemeContext from '../contexts/themeContext';\nimport { getCurrentUser } from '../redux/selectors/appState';\nimport { setCurrentUserRole } from '../redux/actions/appState';\n\nconst SELECTABLE_ROLES = ['user', 'admin']\n\nconst Settings = ({user, setCurrentUserRole}) => {\n  const handleRoleSelect = event => {\n    const { value } = event.target\n    setCurrentUserRole(value)\n  }\n\n  return (\n    <div>\n      <h5>Settings</h5>\n      <p>A lot of checkboxes and buttons...</p>\n\n      <p>Current User:</p>\n      <pre>{JSON.stringify(user, null, 2)}</pre>\n\n      <form>\n        <label>\n          Current Role:\n          <select onChange={handleRoleSelect} value={user.role}>\n            {SELECTABLE_ROLES.map(roleName => <option value={roleName}>{roleName}</option>)}\n          </select>\n        </label>\n      </form>\n      <ThemeContext.Consumer>\n        {({toggleTheme}) => (\n          <label>\n            Dark Theme\n            <button type=\"button\" onClick={toggleTheme}>Toggle Theme</button>\n          </label>\n        )}\n      </ThemeContext.Consumer>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: getCurrentUser(state)\n})\n\nconst mapDispatchToProps = {\n  setCurrentUserRole\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n","import { SET_CURRENT_USER, SET_CURRENT_USER_ROLE } from '../actionTypes/appState';\n\nexport const setCurrentUser = user => ({\n  type: SET_CURRENT_USER,\n  payload: user,\n})\n\nexport const setCurrentUserRole = role => ({\n  type: SET_CURRENT_USER_ROLE,\n  payload: role,\n})\n","export const SET_CURRENT_USER = 'SET_CURRENT_USER'\nexport const SET_CURRENT_USER_ROLE = 'SET_CURRENT_USER_ROLE'\n","import React from 'react';\nimport withLoader from '../hoc/withLoader';\n\nconst ListData = () => {\n  return (\n    <ul>\n      <li>Dummy Data1</li>\n      <li>Dummy Data2</li>\n      <li>Dummy Data3</li>\n      <li>Dummy Data4</li>\n      <li>Dummy Data5</li>\n      <li>Dummy Data6</li>\n      <li>Dummy Data7</li>\n      <li>Dummy Data8</li>\n    </ul>\n  )\n}\n\nexport default withLoader(ListData)\n","import React from 'react';\n\nconst withLoader = Component => {\n  const enhancedComponent = (props) => {\n    const { isLoading, ...componentProps } = props\n    return props.isLoading\n      ? <p>Loading...</p>\n      : <Component {...componentProps} />\n  }\n\n  return enhancedComponent\n}\n\nexport default withLoader\n","import React from 'react';\n\nimport ListData from './ListData';\n\nclass List extends React.Component {\n  state = { isLoading: true }\n\n  componentDidMount() {\n    setTimeout(() => this.setState({ isLoading: false }), 3000)\n  }\n\n  render() {\n    console.log(this.state)\n    return (\n      <>\n        <h1>A list</h1>\n        <ListData isLoading={this.state.isLoading}/>\n      </>\n    )\n  }\n}\n\nexport default List\n","import React from 'react';\n\nconst Admin = () => {\n  return (\n    <div>\n      <h2>Admin panel</h2>\n      <img src='https://www.placecage.com/c/600/800' alt=''/>\n    </div>\n  )\n}\n\nexport default Admin\n","import React, { Component } from 'react'\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { counter: 0 };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  \n  handleClick() {\n    this.setState(({counter}) => ({\n      counter: counter + 1\n    }));\n  }\n\n  render() {\n    if (this.state.counter >= 1) {\n      throw new Error('I crashed!');\n    }\n    return <h1 onClick={this.handleClick}>{this.state.counter}</h1>;\n  }\n}\n\nexport default ErrorBoundary\n","import React, { Component } from 'react'\nimport axios from 'axios';\n\nexport class RequestCancellation extends Component {\n  source = axios.CancelToken.source();\n  state = {\n    response: ''\n  }\n\n  componentWillUnmount() {\n    this.source.cancel('Request cancelled')\n  }\n\n  handleClick = () => {\n    axios.get('http://localhost:3001', { cancelToken: this.source.token })\n      .then(({ data }) => this.setState({response: data}))\n      .catch(error => axios.isCancel(error) ? console.log('cancelled') : console.error(error))\n  }\n\n  render() {\n    return (\n      <div>\n        <button type=\"button\" onClick={this.handleClick}>Make a request</button>\n        <pre>\n          {JSON.stringify(this.state, null, 2)}\n        </pre>\n      </div>\n    )\n  }\n}\n\nexport default RequestCancellation\n","import React from 'react'\n\nconst modalStyles = {\n  position: 'absolute',\n  top: '20%',\n  right: '20%',\n  bottom: '20%',\n  left: '20%',\n  background: 'gray',\n}\n\nconst Modal = ({ content, buttonText, onConfirm, onClose, isOpen }) => {\n  if (!isOpen) { return null }\n\n  return (\n    <div style={modalStyles}>\n      <button type=\"button\" onClick={onClose}>X</button>\n      <div>{content}</div>\n      <button type=\"button\" onClick={onConfirm}>{buttonText}</button>\n    </div>\n  )\n}\n\nexport default Modal\n","import React, { Component } from 'react'\nimport Modal from './reusable/Modal';\n\nexport class ModalsPage extends Component {\n  state = {\n    isFirstModalOpen: false,\n    isSecondModalOpen: false,\n  }\n\n  onFirstConfirm = () => {\n    this.closeFirstModal()\n    console.log('OK')\n  }\n\n  onSecondConfirm = () => {\n    this.closeSecondModal()\n    alert('Boom')\n  }\n\n  closeFirstModal = () => {\n    this.setState({isFirstModalOpen: false})\n  }\n\n  closeSecondModal = () => {\n    this.setState({isSecondModalOpen: false})\n  }\n\n  openFirstModal = () => {\n    this.setState({isFirstModalOpen: true})\n  }\n\n  openSecondModal = () => {\n    this.setState({isSecondModalOpen: true})\n  }\n\n  render() {\n    const { isFirstModalOpen, isSecondModalOpen } = this.state;\n    return (\n      <>\n        <button type=\"button\" onClick={this.openFirstModal}>Open First Modal</button>\n        <button type=\"button\" onClick={this.openSecondModal}>Open First Modal</button>\n        <Modal\n          isOpen={isFirstModalOpen}\n          content=\"Confirm form submission\"\n          buttonText=\"Proceed\"\n          onConfirm={this.onFirstConfirm}\n          onClose={this.closeFirstModal}\n        />\n        <Modal\n          isOpen={isSecondModalOpen}\n          content=\"Launch Rockets\"\n          buttonText=\"OK\"\n          onConfirm={this.onSecondConfirm}\n          onClose={this.closeSecondModal}\n        />\n      </>\n    )\n  }\n}\n\nexport default ModalsPage\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux';\nimport { Link, Switch, Route, BrowserRouter, Redirect } from 'react-router-dom';\nimport { get, isEqual } from 'lodash';\n\nimport ThemeContext, { themes } from '../contexts/themeContext';\nimport Boundary from '../wrappers/Boundary';\nimport Home from './Home';\nimport FormikForm from './FormikForm';\nimport ReduxForm from './ReduxForm';\nimport Settings from './Settings';\nimport List from './List';\nimport Admin from './Admin';\nimport ErrorBoundary from './ErrorBoundary';\nimport RequestCancellation from './RequestCancellation';\nimport ModalsPage from './ModalsPage';\nimport { getCurrentUser } from '../redux/selectors/appState';\n\nconst Router = ({ currentRole }) => {\n  const [currentTheme, setCurrentTheme] = useState(themes.light)\n  const toggleTheme = () => {\n    isEqual(currentTheme, themes.light)\n     ? setCurrentTheme(themes.dark)\n     : setCurrentTheme(themes.light)\n  }\n\n  const styles = {\n    color: currentTheme.foreground,\n    backgroundColor: currentTheme.background,\n    padding: '8px',\n    minHeight: '100vh',\n  }\n\n  const linkStyles = {\n    color: currentTheme.foreground,\n    marginRight: '20px',\n  }\n\n  return (\n    <div style={styles}>\n      <BrowserRouter>\n        <div>\n          <nav>\n            <Link style={linkStyles} to=\"/\">Home</Link>\n            <Link style={linkStyles} to=\"/formik/42\">Formik</Link>\n            <Link style={linkStyles} to=\"/redux_form/50\">Redux Form</Link>\n            <Link style={linkStyles} to=\"/list\">List</Link>\n            <Link style={linkStyles} to=\"/settings\">Settings</Link>\n            <Link style={linkStyles} to=\"/admin\">Admin Panel</Link>\n            <Link style={linkStyles} to=\"/error\">Error Boundaries</Link>\n            <Link style={linkStyles} to=\"/cancellation\">Request</Link>\n            <Link style={linkStyles} to=\"/specialization\">Specialization</Link>\n          </nav>\n          <button type=\"button\" onClick={toggleTheme}>Toggle Theme</button>\n        </div>\n\n        <ThemeContext.Provider value={{theme: currentTheme, toggleTheme: toggleTheme}}>\n          <Switch>\n            <Route path=\"/formik/:id\" component={FormikForm}/>\n            <Route path=\"/redux_form/:id\" component={ReduxForm}/>\n            <Route path=\"/list\" component={List}/>\n            <Route path=\"/settings\" component={Settings}/>\n            <Route path=\"/error\" render={(routeProps) => (\n              <Boundary>\n                <ErrorBoundary/>\n              </Boundary>\n            )}/>\n            <Route\n              path=\"/admin\"\n              render={renderProps => (\n                (currentRole === 'admin')\n                  ? <Admin {...renderProps} />\n                  : <Redirect to='/' />\n              )}\n            />\n            <Route path=\"/cancellation\" component={RequestCancellation} />\n            <Route path=\"/specialization\" component={ModalsPage} />\n            <Route path=\"/\" component={Home} />\n          </Switch>\n        </ThemeContext.Provider>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  currentRole: get(getCurrentUser(state), 'role', 'guest'),\n})\n\nexport default connect(mapStateToProps)(Router)\n","import { SET_CURRENT_USER, SET_CURRENT_USER_ROLE } from '../actionTypes/appState';\n\nexport const initialState = {\n  currentUser: {\n    email: 'b.maka@selleo.com',\n    role: 'user'\n  }\n}\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_CURRENT_USER: {\n      return {\n        ...state,\n        currentUser: payload\n      }\n    }\n\n    case SET_CURRENT_USER_ROLE: {\n      return {\n        ...state,\n        currentUser: {\n          ...state.currentUser,\n          role: payload\n        }\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport appState from './appState';\n\nexport default combineReducers({\n  form: formReducer,\n  appState\n})\n","import { createStore } from 'redux';\n\nimport rootReducer from '../reducers';\n\nexport const store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport './App.css';\nimport Router from './components/Router';\nimport { store } from './redux/stores';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router/>\n    </Provider>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}